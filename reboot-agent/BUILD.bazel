load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")

go_library(
    name = "go_default_library",
    srcs = ["main.go"],
    visibility = ["//visibility:private"],
    deps = [
        "//common:go_default_library",
        "//vendor/github.com/coreos/go-systemd/login1:go_default_library",
        "//vendor/github.com/golang/glog:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/fields:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/runtime:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/wait:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/watch:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes:go_default_library",
        "//vendor/k8s.io/client-go/pkg/api/v1:go_default_library",
        "//vendor/k8s.io/client-go/tools/cache:go_default_library",
    ],
)

load("@io_bazel_rules_docker//docker/contrib/go:image.bzl", "go_image")

go_image(
    name = "reboot-agent",
    library = ":go_default_library",
    visibility = ["//visibility:public"],
)

load("@k8s_daemonset//:defaults.bzl", "k8s_daemonset")

k8s_daemonset(
   name = "deploy",
   template = ":daemonset.yaml",
   images = {
       "gcr.io/convoy-adapter/reboot-agent:latest": ":reboot-agent",
   }
)
