load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")

go_library(
    name = "go_default_library",
    srcs = ["main.go"],
    visibility = ["//visibility:private"],
    deps = [
        "//apis/cr/v1:go_default_library",
        "//common:go_default_library",
        "//vendor/github.com/golang/glog:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/fields:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/runtime:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/runtime/serializer:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/wait:go_default_library",
        "//vendor/k8s.io/client-go/pkg/api/v1:go_default_library",
        "//vendor/k8s.io/client-go/rest:go_default_library",
        "//vendor/k8s.io/client-go/tools/cache:go_default_library",
        "//vendor/k8s.io/client-go/util/workqueue:go_default_library",
    ],
)

load("@io_bazel_rules_docker//docker/contrib/go:image.bzl", "go_image")

go_image(
    name = "reboot-controller",
    library = ":go_default_library",
    visibility = ["//visibility:public"],
)

load("@k8s_crd//:defaults.bzl", "k8s_crd")

k8s_crd(
    name = "crd",
    template = ":package.yaml",
)

load("@k8s_deploy//:defaults.bzl", "k8s_deploy")

k8s_deploy(
    name = "deploy",
    images = {
        "gcr.io/convoy-adapter/reboot-controller:latest": ":reboot-controller",
    },
    template = ":deployment.yaml",
)
